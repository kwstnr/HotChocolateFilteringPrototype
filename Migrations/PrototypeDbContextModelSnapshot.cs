// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Prototype.data;

#nullable disable

namespace Prototype.Migrations
{
    [DbContext(typeof(PrototypeDbContext))]
    partial class PrototypeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Prototype.model.Author", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("040b979f-204c-4cdd-8d99-20d77ea3c0dd"),
                            Name = "Author 1"
                        },
                        new
                        {
                            Id = new Guid("a48658ba-e41c-4634-9846-89df0fd6a953"),
                            Name = "Author 2"
                        });
                });

            modelBuilder.Entity("Prototype.model.Book", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AuthorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b56a4853-86eb-4ae8-b0b0-fef35a2d870f"),
                            AuthorId = new Guid("040b979f-204c-4cdd-8d99-20d77ea3c0dd"),
                            Title = "Book 1"
                        },
                        new
                        {
                            Id = new Guid("461d585b-248e-41a7-b154-1ddd5addda4a"),
                            AuthorId = new Guid("a48658ba-e41c-4634-9846-89df0fd6a953"),
                            Title = "Book 2"
                        });
                });

            modelBuilder.Entity("Prototype.model.Book", b =>
                {
                    b.HasOne("Prototype.model.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");
                });

            modelBuilder.Entity("Prototype.model.Author", b =>
                {
                    b.Navigation("Books");
                });
#pragma warning restore 612, 618
        }
    }
}
